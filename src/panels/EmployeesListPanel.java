/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package panels;
import database.DatabaseManager;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel; 
import models.Department;
import models.Employee;
import util.Constants.Role;
import util.ErrorHandler;

/**
 *
 * @author david
 */
public class EmployeesListPanel extends javax.swing.JPanel {
 private MainWindow window;
 private DatabaseManager dbm;
 private ArrayList<Employee> allEmployees;
 private DefaultListModel<Employee> listModel; 

    public EmployeesListPanel(MainWindow window) {
        this.window=window;
        this.dbm= window.getDBM();
        initComponents();
        allEmployees = dbm.getEmployees(); 
        loadDepartments();
        listModel = new DefaultListModel<>();

       employeeList.setModel(listModel); 
   
       // Om användaren är handlägare, ändra behörigheter
       if (window.getUserRole()==Role.MANAGER){
            listEmployees(window.getUser().getDepartmentId(),"",""); 
            departmentComboBox.setSelectedIndex(window.getUser().getDepartmentId()); 
            departmentComboBox.setEnabled(false); 
            
            newEmployeeButton.setEnabled(false); // Kan ej lägga till anställda
       } else {
        listEmployees(0,"","");
       }
    }
    
    private void loadDepartments() {
     // Hämta alla avdelningar från databasen via DatabaseManager
    ArrayList<Department> departments = dbm.getDepartments();

    // Skapa en DefaultComboBoxModel för JComboBox
    DefaultComboBoxModel<Department> departmentModel = new DefaultComboBoxModel<>();

    // Lägg till ett standardalternativ för "Alla avdelningar"
    departmentModel.addElement(new Department(0, "Alla avdelningar", "", "", "", ""));

    // Lägg till varje avdelning i modellen
    if (departments != null) {
        for (Department dept : departments) {
            departmentModel.addElement(dept);
        }
    }

    // Sätt modellen 
    departmentComboBox.setModel(departmentModel);
    }
    
    
private void listEmployees(int departmentId, String nameQuery, String emailQuery) {
    listModel.clear(); // Rensa befintliga poster i modellen

    // Normalisera söksträngar för jämförelse
    String normalizedNameQuery =  nameQuery.trim().toLowerCase();
    String normalizedEmailQuery = emailQuery.trim().toLowerCase();

    for (Employee emp : allEmployees) {
        boolean matchesDepartment = (departmentId == 0 || emp.getDepartmentId() == departmentId);
        boolean matchesName = normalizedNameQuery.isEmpty() ||
                              emp.getFirstName().toLowerCase().contains(normalizedNameQuery) ||
                              emp.getLastName().toLowerCase().contains(normalizedNameQuery) ||
                              (emp.getFirstName()+" "+emp.getLastName()).toLowerCase().contains(normalizedNameQuery);
        boolean matchesEmail = normalizedEmailQuery.isEmpty() ||
                               emp.getEmail().toLowerCase().contains(normalizedEmailQuery);

        if (matchesDepartment && matchesName && matchesEmail) {
            listModel.addElement(emp);
        }
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        goBackButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeList = new javax.swing.JList<>();
        newEmployeeButton = new javax.swing.JButton();
        editEmployeeButton = new javax.swing.JButton();
        deleteEmployeeButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameFilterTextField = new javax.swing.JTextField();
        emailFilterTextField = new javax.swing.JTextField();
        departmentComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        applyFiltersButton = new javax.swing.JButton();
        clearFiltersButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        activeFiltersDynamicLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(600, 600));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Lista över anställda");

        goBackButton.setText("< Tillbaka till start");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });

        employeeList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        employeeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                employeeListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(employeeList);

        newEmployeeButton.setText("Ny anställd");
        newEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeButtonActionPerformed(evt);
            }
        });

        editEmployeeButton.setText("Hantera anställd");
        editEmployeeButton.setEnabled(false);
        editEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmployeeButtonActionPerformed(evt);
            }
        });

        deleteEmployeeButton.setText("Radera anställd");
        deleteEmployeeButton.setEnabled(false);
        deleteEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEmployeeButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(234, 234, 234));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Filter");

        jLabel3.setText("Namn:");

        jLabel4.setText("Epost:");

        departmentComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departmentComboBoxActionPerformed(evt);
            }
        });

        jLabel5.setText("Avdelning:");

        applyFiltersButton.setText("Applicera");
        applyFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyFiltersButtonActionPerformed(evt);
            }
        });

        clearFiltersButton.setText("Rensa");
        clearFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFiltersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(14, 14, 14)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(emailFilterTextField)
                            .addComponent(nameFilterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(clearFiltersButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(applyFiltersButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(departmentComboBox, 0, 245, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departmentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailFilterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyFiltersButton)
                    .addComponent(clearFiltersButton))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Aktiva filter:");

        activeFiltersDynamicLabel.setText("activeFiltersDynamicLabel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteEmployeeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editEmployeeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newEmployeeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(goBackButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(activeFiltersDynamicLabel)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(goBackButton)
                .addGap(7, 7, 7)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(activeFiltersDynamicLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(newEmployeeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editEmployeeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteEmployeeButton)))
                .addContainerGap(153, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        window.showStartPanel();
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void newEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newEmployeeButtonActionPerformed

    // En anställd vald 
    private void employeeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_employeeListValueChanged
       
       boolean isSelected = !employeeList.isSelectionEmpty();
       editEmployeeButton.setEnabled(isSelected);
       
       // Aktivera radera knappen ifall användaren är administratör
        if (window.getUserRole()==Role.ADMIN){
            deleteEmployeeButton.setEnabled(isSelected);
        }
    }//GEN-LAST:event_employeeListValueChanged

    private void editEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEmployeeButtonActionPerformed
        Employee selectedEmployee = employeeList.getSelectedValue();
        window.showManageEmployeePanel(selectedEmployee);
    }//GEN-LAST:event_editEmployeeButtonActionPerformed

    private void deleteEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEmployeeButtonActionPerformed
       Employee selectedEmployee = employeeList.getSelectedValue();
       boolean confirm = ErrorHandler.showConfirmation(this,"Bekräfta radering av "+selectedEmployee.getFirstName()+" "+selectedEmployee.getLastName());

        if (confirm) {
            
                if(dbm.deleteEmployee(selectedEmployee.getId())) {
                listModel.removeElement(selectedEmployee);
                ErrorHandler.showInfo(this, "Anställd raderad!");
                }else {
                ErrorHandler.showError(this, false, "Kunde inte radera anställd!");
            }
        }
    }//GEN-LAST:event_deleteEmployeeButtonActionPerformed

    private void applyFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyFiltersButtonActionPerformed
        // TODO add your handling code here:
   
    Department selectedDepartment = (Department) departmentComboBox.getSelectedItem();
    int departmentId = selectedDepartment.getId();

    String nameQuery = nameFilterTextField.getText();
    String emailQuery = emailFilterTextField.getText();


    listEmployees(departmentId, nameQuery, emailQuery);

    }//GEN-LAST:event_applyFiltersButtonActionPerformed

    private void departmentComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departmentComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departmentComboBoxActionPerformed

    private void clearFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFiltersButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearFiltersButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activeFiltersDynamicLabel;
    private javax.swing.JButton applyFiltersButton;
    private javax.swing.JButton clearFiltersButton;
    private javax.swing.JButton deleteEmployeeButton;
    private javax.swing.JComboBox<Department> departmentComboBox;
    private javax.swing.JButton editEmployeeButton;
    private javax.swing.JTextField emailFilterTextField;
    private javax.swing.JList<Employee> employeeList;
    private javax.swing.JButton goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameFilterTextField;
    private javax.swing.JButton newEmployeeButton;
    // End of variables declaration//GEN-END:variables
}
